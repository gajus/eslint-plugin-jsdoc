{"version":3,"sources":["rules/checkTagNames.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AACA;;;;;;kBAEe,4BAAa,gBAKtB;AAAA,QAJF,KAIE,QAJF,KAIE;AAAA,QAHF,MAGE,QAHF,MAGE;AAAA,QAFF,KAEE,QAFF,KAEE;AAAA,QADF,OACE,QADF,OACE;;AACF,2BAAU,MAAM,IAAhB,EAAsB,UAAC,QAAD,EAAc;AAChC,YAAM,YAAY,OAAlB;AACA,YAAM,MAAM,SAAS,GAArB;AACA,YAAI,aAAa,EAAjB;;;AAGA,YAAI,mBAAM,QAAQ,OAAd,EAAuB,CAAvB,KAA6B,mBAAM,QAAQ,OAAR,CAAgB,CAAhB,CAAN,EAA0B,SAA1B,CAAjC,EAAuE;AACnE,yBAAa,QAAQ,OAAR,CAAgB,CAAhB,EAAmB,SAAnB,CAAb;AACH;;AAED,YAAI,MAAM,UAAN,CAAiB,GAAjB,KAAyB,uBAAU,UAAV,EAAsB,GAAtB,MAA+B,CAAC,CAA7D,EAAgE;AAC5D,gBAAM,mBAAmB,MAAM,mBAAN,CAA0B,SAAS,GAAnC,CAAzB;;AAEA,gBAAI,qBAAqB,SAAS,GAAlC,EAAuC;AACnC,uBAAO,8CAA8C,SAAS,GAAvD,GAA6D,oBAA7D,GAAoF,gBAApF,GAAuG,IAA9G;AACH;AACJ,SAND,MAMO;AACH,mBAAO,6BAA6B,SAAS,GAAtC,GAA4C,IAAnD;AACH;AACJ,KAnBD;AAoBH,CA1Bc,C","file":"checkTagNames.js","sourcesContent":["import _ from 'lodash';\nimport iterateJsdoc from './../iterateJsdoc';\n\nexport default iterateJsdoc(({\n    jsdoc,\n    report,\n    utils,\n    context\n}) => {\n    _.forEach(jsdoc.tags, (jsdocTag) => {\n        const extraTags = 'extra';\n        const tag = jsdocTag.tag;\n        let customTags = [];\n\n        // if we support more options we either need to enforce the order or search all the options\n        if (_.has(context.options, 0) && _.has(context.options[0], extraTags)) {\n            customTags = context.options[0][extraTags];\n        }\n\n        if (utils.isValidTag(tag) || _.indexOf(customTags, tag) !== -1) {\n            const preferredTagName = utils.getPreferredTagName(jsdocTag.tag);\n\n            if (preferredTagName !== jsdocTag.tag) {\n                report('Invalid JSDoc tag (preference). Replace \"' + jsdocTag.tag + '\" JSDoc tag with \"' + preferredTagName + '\".');\n            }\n        } else {\n            report('Invalid JSDoc tag name \"' + jsdocTag.tag + '\".');\n        }\n    });\n});\n"]}