{"version":3,"sources":["iterateJsdoc.js"],"names":[],"mappings":";;;;;;;;;;;;;;AACA;;;;AACA;;;;;;AAEA,IAAM,aAAa,SAAb,UAAa,CAAC,YAAD,EAAe,KAAf,EAAsB,iBAAtB,EAA4C;AAC3D,QAAM,QAAQ,EAAd;;AAEA,UAAM,yBAAN,GAAkC,YAAM;AACpC,eAAO,qBAAW,yBAAX,CAAqC,YAArC,CAAP;AACH,KAFD;;AAIA,UAAM,0BAAN,GAAmC,YAAM;AACrC,eAAO,qBAAW,0BAAX,CAAsC,KAAtC,EAA6C,MAAM,mBAAN,CAA0B,OAA1B,CAA7C,CAAP;AACH,KAFD;;AAIA,UAAM,sBAAN,GAA+B,YAAM;AACjC,eAAO,qBAAW,sBAAX,CAAkC,KAAlC,EAAyC,MAAM,mBAAN,CAA0B,OAA1B,CAAzC,CAAP;AACH,KAFD;;AAIA,UAAM,mBAAN,GAA4B,UAAC,IAAD,EAAU;AAClC,eAAO,qBAAW,mBAAX,CAA+B,IAA/B,EAAqC,iBAArC,CAAP;AACH,KAFD;;AAIA,UAAM,UAAN,GAAmB,UAAC,IAAD,EAAU;AACzB,eAAO,qBAAW,UAAX,CAAsB,IAAtB,CAAP;AACH,KAFD;;AAIA,WAAO,KAAP;AACH,CAxBD;;kBA0Be,UAAC,QAAD,EAAc;AACzB,WAAO,UAAC,OAAD,EAAa;AAChB,YAAM,aAAa,QAAQ,aAAR,EAAnB;AACA,YAAM,oBAAoB,mBAAM,OAAN,EAAe,kCAAf,KAAsD,EAAhF;;AAEA,YAAM,aAAa,SAAb,UAAa,CAAC,YAAD,EAAkB;AACjC,gBAAM,YAAY,WAAW,eAAX,CAA2B,YAA3B,CAAlB;;AAEA,gBAAI,CAAC,SAAL,EAAgB;AACZ;AACH;;AAED,gBAAM,QAAQ,6BAAc,OAAO,UAAU,KAAjB,GAAyB,IAAvC,EAA6C;;AAEvD,yBAAS,CACL,wBAAc,OAAd,CAAsB,SADjB,EAEL,wBAAc,OAAd,CAAsB,UAFjB,EAGL,UAAC,GAAD,EAAM,IAAN,EAAe;AACX,wBAAI,wBAAW,CAAC,QAAD,EAAW,SAAX,CAAX,EAAkC,KAAK,GAAvC,CAAJ,EAAiD;AAC7C,+BAAO,IAAP;AACH;AACD,2BAAO,wBAAc,OAAd,CAAsB,UAAtB,CAAiC,GAAjC,EAAsC,IAAtC,CAAP;AACH,iBARI,EASL,wBAAc,OAAd,CAAsB,iBATjB;AAF8C,aAA7C,EAaX,CAbW,KAaL,EAbT;;AAeA,gBAAM,SAAS,SAAT,MAAS,CAAC,OAAD,EAAa;AACxB,wBAAQ,MAAR,CAAe,SAAf,EAA0B,OAA1B;AACH,aAFD;;AAIA,gBAAM,QAAQ,WAAW,YAAX,EAAyB,KAAzB,EAAgC,iBAAhC,CAAd;;AAEA,qBAAS;AACL,gCADK;AAEL,0CAFK;AAGL,4BAHK;AAIL,oCAJK;AAKL,8BALK;AAML;AANK,aAAT;AAQH,SApCD;;AAsCA,eAAO;AACH,qCAAyB,UADtB;AAEH,iCAAqB,UAFlB;AAGH,gCAAoB;AAHjB,SAAP;AAKH,KA/CD;AAgDH,C","file":"iterateJsdoc.js","sourcesContent":["import _ from 'lodash';\nimport commentParser from 'comment-parser';\nimport jsdocUtils from './jsdocUtils';\n\nconst curryUtils = (functionNode, jsdoc, tagNamePreference) => {\n    const utils = {};\n\n    utils.getFunctionParameterNames = () => {\n        return jsdocUtils.getFunctionParameterNames(functionNode);\n    };\n\n    utils.getJsdocParameterNamesDeep = () => {\n        return jsdocUtils.getJsdocParameterNamesDeep(jsdoc, utils.getPreferredTagName('param'));\n    };\n\n    utils.getJsdocParameterNames = () => {\n        return jsdocUtils.getJsdocParameterNames(jsdoc, utils.getPreferredTagName('param'));\n    };\n\n    utils.getPreferredTagName = (name) => {\n        return jsdocUtils.getPreferredTagName(name, tagNamePreference);\n    };\n\n    utils.isValidTag = (name) => {\n        return jsdocUtils.isValidTag(name);\n    };\n\n    return utils;\n};\n\nexport default (iterator) => {\n    return (context) => {\n        const sourceCode = context.getSourceCode();\n        const tagNamePreference = _.get(context, 'settings.jsdoc.tagNamePreference') || {};\n\n        const checkJsdoc = (functionNode) => {\n            const jsdocNode = sourceCode.getJSDocComment(functionNode);\n\n            if (!jsdocNode) {\n                return;\n            }\n\n            const jsdoc = commentParser('/*' + jsdocNode.value + '*/', {\n                // @see https://github.com/yavorskiy/comment-parser/issues/21\n                parsers: [\n                    commentParser.PARSERS.parse_tag,\n                    commentParser.PARSERS.parse_type,\n                    (str, data) => {\n                        if (_.includes(['return', 'returns'], data.tag)) {\n                            return null;\n                        }\n                        return commentParser.PARSERS.parse_name(str, data);\n                    },\n                    commentParser.PARSERS.parse_description\n                ]\n            })[0] || {};\n\n            const report = (message) => {\n                context.report(jsdocNode, message);\n            };\n\n            const utils = curryUtils(functionNode, jsdoc, tagNamePreference);\n\n            iterator({\n                context,\n                functionNode,\n                jsdoc,\n                jsdocNode,\n                report,\n                utils\n            });\n        };\n\n        return {\n            ArrowFunctionExpression: checkJsdoc,\n            FunctionDeclaration: checkJsdoc,\n            FunctionExpression: checkJsdoc\n        };\n    };\n};\n"]}